plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.31'
    id 'org.jetbrains.dokka' version '0.9.18'
    id 'org.ajoberstar.git-publish' version '2.1.1'
}

group 'br.com.gamemods'
version '1.0-SNAPSHOT'

sourceSets.main.java.srcDirs = ["src/main/kotlin"]
sourceSets.test.java.srcDirs = ["src/main/kotlin"]

sourceCompatibility = 1.8
targetCompatibility = sourceCompatibility

repositories {
    jcenter()
    maven { url 'https://hub.spigotmc.org/nexus/content/groups/public/' }
    maven { url 'https://dl.bintray.com/orangy/maven' }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-reflect'
    implementation group: 'net.md-5', name: 'bungeecord-chat', version: '1.14-SNAPSHOT'
    implementation 'br.com.gamemods:region-manipulator:0.0.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-cli-jvm:0.1.0-dev-4'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'javadoc'
    outputDirectory = "$buildDir/javadoc"
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    classifier = 'javadoc'
    from dokkaJavadoc.outputDirectory
    // options.encoding = 'UTF-8'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.java.srcDirs
    classifier = 'sources'
}

artifacts {
    archives sourcesJar
}

// dokka will fail to build the javadoc jar on newest java versions
// https://github.com/Kotlin/dokka/issues/294
if (JavaVersion.current().majorVersion == "8") {
    artifacts {
        archives javadocJar
    }

    if (ext.has('org.ajoberstar.grgit.auth.username')) {
        System.setProperty('org.ajoberstar.grgit.auth.username', ext['org.ajoberstar.grgit.auth.username'].toString())
        System.setProperty('org.ajoberstar.grgit.auth.password', ext['org.ajoberstar.grgit.auth.password'].toString())
    }

    gitPublish {
        // where to publish to (repo must exist)
        repoUri = 'https://github.com/GameModsBR/Java2Nukkit-World-Converter.git'

        // where to fetch from prior to fetching from the remote (i.e. a local repo to save time)
        referenceRepoUri = file("$projectDir/gh-pages").toURI().toString()

        // branch will be created if it doesn't exist
        branch = 'gh-pages'

        // generally, you don't need to touch this
        repoDir = file("$buildDir/gh-pages-repo") // defaults to $buildDir/gitPublish

        // what to publish, this is a standard CopySpec
        contents {
            from 'src/pages'
            from 'README.md'
            from 'MISSING_FEATURES.md'
            from 'REPLACEMENTS.md'
            rename ('README.md', 'index.md')
            from("$buildDir/javadoc") {
                into 'javadoc'
            }
        }

        // what to keep in the existing branch (include=keep)
        preserve {
            include '1.0.0/**'
            exclude '1.0.0/temp.txt'
        }

        // message used when committing changes
        commitMessage = 'Github Pages update' // defaults to 'Generated by gradle-git-publish'
    }
}

gitPublishCopy.dependsOn dokkaJavadoc
